DEV-22287 (Defect 10)
During the investigation of an OOM Support should be confirming if the OOM was caused by the issue addressed in DEV-22287:

1. From toolbar select the Dominator Tree view
2. Sort largest -> smallest by retained size
3. Locate the thread(s) at the top of the list.  There should be 3+ taking up around 900MB of total memory
4. Expand the threads.  They should contain many PatientInteraction objects
5. Right mouse click on the thread and select List Objects>Outgoing References
6. Search for a '<Java Local> java.lang.String' object of type Charges(this verifies it is an OOM from Charge Search)
7. Search for a '<Java Local> org.apache.catalina.connector.Request' and expand it
8. Search for PostData within the expanded results.  This contains the parameters used during the Charge Search.
9. Within PostData, search for 'NONCODED-Outpatient=on'.  The OOM was caused by DEV-22287 if the postData for each of the large threads contains 'NONCODED-Outpatient=on'.


DEV-31450 (Defect 11)
A heap dump from an out of memory error that was caused by this issue will evidence a retained heap size for the SessionImpl class over 100MB.

    Open the Dominator Tree
    Look for instance: net.sf.hibernate.impl.SessionImpl that is over 100MB retained size
    Right-click, select List Objects -> with outgoing references
    Expand net.sf.hibernate.impl.SessionImpl @ 0xNNNNNNN
    Expand "interceptor" object
    Expand "val$callback" sub object
    Select "this$0, val$callback"
    See if the the class is: com.patientkeeper.monaco.GetOrderDefinitionList
    Right-click on entitiesByKey and select Show Objects by class -> by outgoing references
    Expand java.util.HashMap, expand java.util.HashMap$Entry[], expand java.util.HashMap$Entry
    Look for com.patientkeeper.monaco.cds.CdsCode with 100k or more objects
    Repeat steps 3-11 if more than 1 SessionImpl greater than 100MB


If the retained heap size for the SessionImpl  class is over 100MB,
and the "this$0, val$callback" class references "GetOrderDefintion",
and th the CdsCode  has more than 100k objects,
the OOM was caused by DEV-31250.